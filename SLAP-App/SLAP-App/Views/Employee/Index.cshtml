@using SLAP_App.Models
@model  SLAP_App.Models.EmployeeViewModels
@{
    ViewBag.Title = "Employee";
}
@{List<EmployeeViewModel> _employeeViewModelForSelf = Model.EmployeeModels.Where(p => p.AssociateUserId == ViewBag.UserId).ToList();}
@{List<EmployeeViewModel> _employeeViewModelForPeer = Model.EmployeeModels.Where(p => p.AssociateUserId != ViewBag.UserId).ToList();}

    <div class="employee-box">
        
        <h4>Self Appraisal Form</h4>
    @using (Html.BeginForm("UpdateSelfAppraisal", "Employee", FormMethod.Post, new {enctype = "multipart/form-data"}))
    {
        @Html.HiddenFor(model => model.PcAssociateViewModel.AssociateUserId, new {htmlAttributes = new {@class = "form-control"}})
        @Html.HiddenFor(model => model.PcAssociateViewModel.PCUserId, new {htmlAttributes = new {@class = "form-control"}})
        @Html.HiddenFor(model => model.PcAssociateViewModel.PCAssociatesId, new {htmlAttributes = new {@class = "form-control"}})
        @Html.HiddenFor(model => model.PcAssociateViewModel.PeerListFinalized, new {htmlAttributes = new {@class = "form-control"}})
        @Html.HiddenFor(model => model.PcAssociateViewModel.Peers, new {htmlAttributes = new {@class = "form-control"}})
        <table>
            <tr>
                <th>
                    PC Name
                </th>
                <th>
                    Download/Upload
                </th>
                <th>
                    Appraisal Date
                </th>
                <th>
                    Last Notification Date
                </th>
            </tr>
            <tr>
                <td>
                    @Html.EditorFor(model => model.PcAssociateViewModel.PCDisplayName, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                </td>
                <td >
                    <input type="file" name="SelfAppraisalDocument"/>
                    @if (!string.IsNullOrEmpty(@Model.PcAssociateViewModel.SelfAppraisalDocumentUrl))
                    {
                        <a href="@Model.PcAssociateViewModel.SelfAppraisalDocumentUrl" target="_blank" title="Download Self Appraisal form">Download</a>
                    }
                </td>
                <td>
                    @Html.EditorFor(model => model.PcAssociateViewModel.AppraisalDate, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                </td>
                <td>
                    @Html.EditorFor(model => model.PcAssociateViewModel.LastNotificationDate, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                </td>
            </tr>
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    }
        <h4>Peer Form to upload</h4>
        <table style="width:100%">
            <tr>
                <th>
                    PeerName
                </th>
                <th>
                    Share Feedback Status with Associate
                </th>
                <th>
                    Download/Upload
                </th>
       
   
            </tr>
            @for (var i = 0; i < _employeeViewModelForSelf.Count; i++)
            {
                @Html.Partial("EmployeeFeedbackTable", _employeeViewModelForSelf[i]);
        
            }
        </table>

    </div>
    <div style="clear:both"></div>
    <div class="employee-box">
        

        <h4>View feedback those shared with you</h4>
        <table class="table">
            <tr>
                <th>
                    AssociateName
                </th>
                <th>
                    Share Feedback Status with Associate
                </th>
                <th>
                    Download
                </th>
       
   
            </tr>
            @for (var i = 0; i < _employeeViewModelForPeer.Count; i++)
            {
                @Html.Partial("EmployeeFeedbackTable", _employeeViewModelForPeer[i]);
        
            }
        </table>
    </div>
    <div style="clear:both"></div>














@*

@{List<EmployeeViewModel> _employeeViewModelForSelf= Model.EmployeeModels.Where(p=>p.AssociateUserId==ViewBag.UserId).ToList();}
@{List<EmployeeViewModel> _employeeViewModelForPeer= Model.EmployeeModels.Where(p=>p.AssociateUserId!=ViewBag.UserId).ToList();}
<div style="width:100%;"> 
    
    <div style="float:left; width:50%; width :auto">
        <h4>Provide feedback to</h4>
        @for (var i = 0; i < _employeeViewModelForSelf.Count; i++)
        {
            @Html.Partial("EmployeeFeedback", _employeeViewModelForSelf[i]);
            <br/>
        }
    </div>
    <div style="float: right; width: auto;">
        <h4>View feedback those shared with you</h4>
        @for (var i = 0; i < _employeeViewModelForPeer.Count; i++)
        {
            @Html.Partial("EmployeeFeedback", _employeeViewModelForPeer[i]);
            <br/>
        }
    </div>

</div>*@

<br/><br/>



